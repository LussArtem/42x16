@use 'sass:math';

// Підключення міксинів ===========================================================================================================================================================================================================================================================================
@import 'base/mixins';

// Підключення шрифтів ===========================================================================================================================================================================================================================================================================
//&display=swap - додати при підключенні через плагін

// Підключити, якщо є локальні файли шрифтів
@import 'fonts/fonts';

// Підключення іконкових шрифтів ==============================================================================================================================================================================================================================================================================
// Підключити, якщо є файл іконкового шрифту
@import 'fonts/icons';

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Налаштування шаблону ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// За замовчуванням шрифт ==============================================================================================================================================================================================================================================================================
$fontFamily: 'Accuratist';
$secondFontFamily: 'Departura Extra Light';
$thirdFontFamily: 'ArgentumSans';
$fontSize: rem(24); // де 14(px) - розмір шрифту за замовчуванням з макету

// Основні кольори
$mainColor: #000; // Колір шрифту за замовчуванням
$contrastColor: #f2f6ff;
$colorYear: var(--accent);
$colorBlack: #141414;
$colorWhite: var(--secondary);

// Палітра кольорів
@import 'base/colors-palette';

// Animation
$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);
$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);
$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);
$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);
$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);

// Налаштування адаптивної сітки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина сторон
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1440;
// Ширина объемного контейнера (0 = небольшое пространство)
$maxWidthContainer: 1380;
// Закрытый вход в контейнер
// (30 = по 15px леворучка и правая ручка, 0 = не больше отступа)
$containerPadding: 30;

// Ширина распределения первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поїнти
$pc: em($containerWidth); // ПК, ноутбуки, деякі планшети у горизонтальному положеннuu
$tablet: em(991.98); // Планшети, деякі телефони в горизонтальному положеннuu
$mobile: em(767.98); // Телефони L
$mobileSmall: em(479.98); // Телефони S
$xz: em(97.5);

// Тип адаптации:
// 1 = чувствительность (в контейнере нet брейкпоинтов),
// 2 = по брейк-поїнту (контейнер меняет свой поворот по брейк-поuнту)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнулення ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import 'base/null';

// Стилі тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
    background-color: var(--primary);
    color: var(--inverse);
    line-height: 1;
    min-width: 320px;
    font-weight: 400;

    // selection color
    ::selection {
        background: var(--text-accent); /* Цвет фона */
        color: #fff; /* Цвет текста */
    }
    // Скролл заблоковано
    .lock & {
        overflow: hidden;
        touch-action: none;
        overscroll-behavior: none;
    }
    // Сайт завантажений
    // .loaded & {
    // }
}
// Оболонка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    @supports (overflow: clip) {
        overflow: clip;
    }
    // Притискаємо footer
    > main {
        flex: 1 1 auto;
    }
    // Фікс для слайдерів
    > * {
        min-width: 0;
    }
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================
/*
(i) Стили будут применяться к
всех классов, содержащих *__container
Наприклад header__container, main__container і т.п.
Снuппет (HTML): cnt
*/
@if ($responsiveType==1) {
    // Чуйна
    [class*='__container'] {
        @if ($maxWidthContainer>0) {
            position: relative;
            max-width: rem($containerWidth);
            margin: 0 auto;
        }
        @if ($containerPadding>0) {
            @if ($maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            } @else {
                @include adaptiveValue('padding-left', math.div($containerPadding, 2), 15);
                @include adaptiveValue('padding-right', math.div($containerPadding, 2), 15);
            }
        }
    }
} @else {
    // Брейк-поїнтами
    [class*='__container'] {
        margin: 0 auto;
        @if ($maxWidthContainer>0) {
            max-width: rem($containerWidth);
        } @else {
            @if ($containerPadding>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
        @media (max-width: $pc) {
            max-width: rem(970);
        }
        @media (max-width: $tablet) {
            max-width: rem(750);
        }
        @media (max-width: $mobile) {
            max-width: none;
            @if ($containerPadding>0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}

// Ограничивающий контейнер grid======================================================================================================================================================================================================================
// (i) Стили будут применяться к
// всех классов, содержащих *__container
.content-grid {
    --padding-inline: 15px;
    --content-max-width: 1380px;
    --breakout-max-width: 1440px;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr)
        [breakout-start] minmax(0, var(--breakout-size))
        [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width))
        [content-end]
        minmax(0, var(--breakout-size)) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid--decor {
    --padding-inline: 15px;
    --content-max-width: 1380px;
    --breakout-max-width: 1440px;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);
    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr)
        [breakout-start] minmax(0px, 460px)
        [content-start] min(100% - (var(--padding-inline) * 19), var(--content-max-width) / 3) [content-end]
        minmax(0px, 460px) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    // grid-template-columns: inherit;
}

// Підключення базових стилів, шаблонів (заготівель) та допоміжних класів
// Для підключення/вимкнення конкретних стилів дивись base.scss
@import 'base';

// Підключення стилів загальних елементів проекту
@import 'common';

// Подключение стилей отдельных блоков
@import 'header';
@import 'footer';
@import 'breadcrumbs';
@import 'can';
@import 'cart';
@import 'catalog';
@import 'speakers-grid';
@import 'comment-reviews';
@import 'item-types';
@import 'works';
@import 'mainscreen';
@import 'popup';
@import 'price';
@import 'media';
@import 'represent';
@import 'masonry';
@import 'playlist-set';

// Підключення стилів окремих сторінок
@import 'home';

.yBodyOverflowHidden {
    overflow: auto !important;
}
